---
import type { Frontmatter } from '../../config';

type Props = {
	currentPage: string;
};

type SidebarContent = {
	[key: string]: { title: string; url: string; }[];
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = `/${currentPage.slice(1)}`;
const pages = await Astro.glob<Frontmatter>('../../pages/**/*.md');

const sortedPages = pages.sort((a, b) => {
	if(a?.url?.startsWith('/introduction')){
		return -1;
	}
	return 0;
});

const sidebar: SidebarContent = sortedPages.reduce((acc, { url, frontmatter }) => {
	if(!url || !frontmatter) return acc;

	const sectionTitle = url.split('/').slice(1)[0].replaceAll('-', ' ');
	const title = frontmatter.title.replaceAll('-', '')

	acc[sectionTitle] = [...(acc[sectionTitle] || []), { title, url }];

	return acc;
}, {} as SidebarContent);

---
<nav aria-labelledby="grid-left">
	<ul class="nav-groups">
		{Object.entries(sidebar).map(([header, pages]) => (
			<li>
				<div class="nav-group">
					<h3>{header}</h3>
					<ul>
						{pages.map(({ title, url }) => {
							return (
								<li class="nav-link">
									<a href={url} aria-current={currentPageMatch === url ? 'page' : false}>
										{title}
									</a>
								</li>
							);
						})}
					</ul>
				</div>
			</li>
		))}
	</ul>
</nav>

<script is:inline>
	window.addEventListener('DOMContentLoaded', () => {
		var target = document.querySelector('[aria-current="page"]');
		if (target && target.offsetTop > window.innerHeight - 100) {
			document.querySelector('.nav-groups').scrollTop = target.offsetTop;
		}
	});
</script>

<style>
	nav {
		width: 100%;
		margin-right: 1rem;
	}

	.nav-groups {
		height: 100%;
		padding: 2rem 0;
		overflow-x: visible;
		overflow-y: auto;
		max-height: 100vh;
	}

	.nav-groups > li + li {
		margin-top: 2rem;
	}

	.nav-groups > :first-child {
		padding-top: var(--doc-padding);
	}

	.nav-groups > :last-child {
		padding-bottom: 2rem;
		margin-bottom: var(--theme-navbar-height);
	}

	.nav-group {
		text-transform: capitalize;
	}

	.nav-group-title {
		font-size: 1rem;
		font-weight: 700;
		padding: 0.1rem 1rem;
		text-transform: uppercase;
		margin-bottom: 0.5rem;
	}

	.nav-link a {
		font-size: 1rem;
		margin: 1px;
		padding: 0.3rem 1rem;
		font: inherit;
		color: inherit;
		text-decoration: none;
		display: block;
		text-transform: capitalize;
	}

	.nav-link a:hover,
	.nav-link a:focus {
		background-color: var(--theme-bg-hover);
	}

	.nav-link a[aria-current='page'] {
		color: var(--theme-text-accent);
		background-color: var(--theme-bg-accent);
		font-weight: 600;
	}

	@media (min-width: 50em) {
		.nav-groups {
			padding: 0;
		}
	}
</style>

<style is:global>
	:root.theme-dark .nav-link a[aria-current='page'] {
		color: hsla(var(--color-base-white), 100%, 1);
	}
</style>
